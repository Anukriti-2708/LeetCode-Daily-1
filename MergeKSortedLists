class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        return merge(lists, 0, lists.length -1);
    }
    
    public ListNode merge(ListNode[] lists, int start, int end){
        if(start > end) return null;
        if(start == end) return lists[end];
        
        int mid = (start + end)/2;
        
        ListNode left = merge(lists, start, mid), right = merge(lists, mid+1, end);
        ListNode dummyHead = new ListNode(0), curr = dummyHead;
        
        while(left!=null && right!=null){
            if(left.val < right.val){
                curr.next = left;
                left = left.next;
            }
            else{
                curr.next = right;
                right = right.next;
            }
            curr = curr.next;
        }
        curr.next = (left!=null) ? left : right;
        
        return dummyHead.next;
    }
}
